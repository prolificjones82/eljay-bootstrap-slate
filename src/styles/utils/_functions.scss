$rem-base: 16px !default;

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@function convert-to-rem($value, $base-value: $rem-base) {
    $value: strip-unit($value) / strip-unit($base-value) * 1rem;
    @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
    @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
    $max: length($values);
  
    @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }
  
    $remValues: ();

    @for $i from 1 through $max {
      $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
    }

    @return $remValues;
}

@mixin img_squared($position: relative, $hover: false, $overlay: false, $percentage: 100%, $img_fit: cover) {
    position: $position;
    overflow: hidden;

    &:after {
        content: '';
        display: block;
        padding-top: $percentage;

    }
    @if $overlay == true {
        &:before {
            content: '';
            position: absolute;
            z-index: 1;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba($black, 0.2);
        }
    }

    img {
        position: absolute;
        @if $overlay == true {
            z-index: 0;
        }
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        object-fit: $img_fit;
        object-position: center;
        transform: scale(1);
        transition: transform 600ms ease-in-out;
    }

    @if $hover == true {
        &:hover {
            img {
                transform: scale(1.05);
            }
        }
    }
}

@mixin fill_image($position: relative, $overlay: true) {
    position: $position;

    img {
        position: absolute;
        @if $overlay == true {
            z-index: 0;
        }
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
    }
}