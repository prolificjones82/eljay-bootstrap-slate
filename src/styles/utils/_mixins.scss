@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}

@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin svg-fill($color, $args: fill $link-transition-speed ease-in-out) {
    svg {
        circle,
        path {
            fill: $color;
            @include transition($args);
        }
    }
}

@mixin image-cover($zindex: 0) {
    position: absolute;
    z-index: $zindex;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    max-width: none;
    object-fit: cover;
    object-position: center;
}

@mixin overlay-color($colour: $black, $opacity: 0.4) {
    background-color: rgba($colour, $opacity);
}

@mixin css-linear-gradient($color1: $black, $opacity1: 0, $position1: 0%, $color2: $black, $opacity2: 1, $position2: 100%) {
    background: -moz-linear-gradient(top,  rgba($color1, $opacity1) $position1, rgba($color2, $opacity2) $position2); /* FF3.6-15 */
    background: -webkit-linear-gradient(top,  rgba($color1, $opacity1) $position1, rgba($color2, $opacity2) $position2); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to bottom,  rgba($color1, $opacity1) $position1, rgba($color2, $opacity2) $position2); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color1}00', endColorstr='#{$color2}',GradientType=0 ); /* IE6-9 */
}